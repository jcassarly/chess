package helpers;

import gameboard.ChessGame;

/**
 *
 * @author Jared Cassarly
 */
public class UndoSetter extends javax.swing.JPanel {
    
    private boolean isWhite;
    private ChessGame parent;
    private ModalityPanel owner;

    /**
     * Creates new form UndoSetter
     */
    public UndoSetter() {
        initComponents();
    }
    
    public UndoSetter(ChessGame parent, ModalityPanel owner, boolean isWhite) {
        this.parent = parent;
        this.owner = owner;
        this.isWhite = isWhite;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label = new javax.swing.JLabel();
        enter = new javax.swing.JTextField();
        confirm = new javax.swing.JButton();

        label.setText("Set Undos for " + ((isWhite) ? "White": "Black"));

        enter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                enterKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                enterKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                enterKeyTyped(evt);
            }
        });

        confirm.setText("Confirm");
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label)
            .addGroup(layout.createSequentialGroup()
                .addComponent(enter, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirm))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirm)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void enterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enterKeyTyped
        onlyDigits();
    }//GEN-LAST:event_enterKeyTyped

    private void enterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enterKeyPressed
        onlyDigits();
    }//GEN-LAST:event_enterKeyPressed

    private void enterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enterKeyReleased
        onlyDigits();
    }//GEN-LAST:event_enterKeyReleased

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
        try {
            parent.setUndos(isWhite, Integer.parseInt(enter.getText()));
            parent.setUndoLabel();
            owner.dispose();
        } catch (NumberFormatException ex) {
            Message.errorMessage("Please enter an integer");
        }
    }//GEN-LAST:event_confirmActionPerformed

    private void onlyDigits() {
        for (int i = 0; i < enter.getText().length(); i++) {
            String text = enter.getText();
            if ((text.charAt(i) < '0' || text.charAt(i) > '9')) {
                enter.setText(text.substring(0, i) + ((i < text.length() - 1) ? text.substring(i+1): ""));
                i = 0;
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirm;
    private javax.swing.JTextField enter;
    private javax.swing.JLabel label;
    // End of variables declaration//GEN-END:variables
}
