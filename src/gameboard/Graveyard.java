package gameboard;

import java.util.ArrayList;
import pieces.Piece;

/**
 *
 * @author Jared Cassarly
 */
public class Graveyard extends javax.swing.JPanel {
    
    private Square[] board;
    private ArrayList<Piece> graveyard;
    
    private boolean isWhite;
    
    public Graveyard() {
        graveyard = new ArrayList<>();
        initComponents();
    }

    /**
     * Creates new form Graveyard
     */
    public Graveyard(boolean isWhite) {
        this.isWhite = isWhite;
        graveyard = new ArrayList<>();
        initComponents();
        initBoard();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        b0 = new gameboard.Square();
        b1 = new gameboard.Square();
        b2 = new gameboard.Square();
        b3 = new gameboard.Square();
        b4 = new gameboard.Square();
        b5 = new gameboard.Square();
        b6 = new gameboard.Square();
        b7 = new gameboard.Square();
        b8 = new gameboard.Square();
        b9 = new gameboard.Square();
        b10 = new gameboard.Square();
        b11 = new gameboard.Square();
        b12 = new gameboard.Square();
        b13 = new gameboard.Square();
        b14 = new gameboard.Square();
        b15 = new gameboard.Square();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(b0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(b10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(b11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(b12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(b13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(b14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(b15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(b12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Initializes the graveyard Squares
     */
    private void initBoard() {
        // Initializes the 8x8 array of squares for chess game
        board = new Square[] {b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15};
        
        // sets the colors of the board
        for (int r = 0; r < board.length; r++) {
            if (isWhite) {
                board[r].getButton().setBackground(Square.WHITE_GRAVEYARD);
            }
            else {
                board[r].getButton().setBackground(Square.BLACK_GRAVEYARD);
            }
        }
    }
    
    /**
     * Adds a piece to the ArrayList associated with the Graveyard and displays it in the GUI
     * @param p the Piece to add
     */
    public void add(Piece p) {
        graveyard.add(p);
        displayFirst16();
    }
    
    /**
     * Removes a piece from the ArrayList associated with the Graveyard and displays the updated list in the GUI
     * @param p the Piece to remove
     */
    public void remove(Piece p) {
        graveyard.remove(p);
        displayFirst16();
    }
    
    /**
     * Removes the first instance of a piece with the given ID if it exists and displays the updated GUI
     * @param pieceID the ID of the piece (1-12)
     */
    public void removePiece(int pieceID) {
        for (int i = graveyard.size() - 1; i >= 0; i--) {
            if (graveyard.get(i).getPieceID() == pieceID) {
                graveyard.remove(i);
                break;
            }
        }
        displayFirst16();
    }
    
    /**
     * Returns the number of pieces contained in the Graveyard
     * @return the number of pieces contained in the Graveyard
     */
    public int getGraveyardSize() {
        return graveyard.size();
    }
    
    /**
     * Returns the Piece at index i
     * @param i the index of the Piece wanted in the graveyard
     * @return the Piece at index i
     */
    public Piece getPiece(int i) {
        return graveyard.get(i);
    }
    
    /**
     * Displays up to the first 16 pieces, 
     * if there are more than 16 pieces in the array, 
     * the color of HAS_MORE is set as the color of the last button
     */
    public void displayFirst16() {
        // unloads all the sprites in the Graveyard GUI
        for (int i = 0; i < board.length; i++) {
            if (board[i].getPiece() != null) {
                board[i].getPiece().getSprite().unloadSprite(board[i].getButton());
                board[i].setPiece(null);
            }
        }
        // load sprites into the GUI
        for (int i = 0; i < graveyard.size(); i++) {
            // adds the first 16 or fewer pieces to the GUI
            if (i < 16) {
                if (board[i].getPiece() != null){
                    board[i].getPiece().getSprite().unloadSprite(board[i].getButton());
                }
                board[i].setPiece(graveyard.get(i));
            }
            // if the index is greater than 15, set the background of the last Square to cyan to show that more Pieces exist beyond what is shown
            else {
                board[15].getButton().setBackground(Square.HAS_MORE);
                i = graveyard.size();
            }
        }
    }
    
    /**
     * Resets the Graveyard ArrayList and unloads all the sprites in the GUI of the graveyard
     */
    public void reset() {
        // empty the list
        graveyard = new ArrayList<>();
        // unload all sprites from the Squares in the board
        for (int c = 0; c <  board.length; c++) {
            Piece s = board[c].getPiece();
            if (s != null) {
                s.getSprite().unloadSprite(board[c].getButton());
            }
            board[c].setPiece(null);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gameboard.Square b0;
    private gameboard.Square b1;
    private gameboard.Square b10;
    private gameboard.Square b11;
    private gameboard.Square b12;
    private gameboard.Square b13;
    private gameboard.Square b14;
    private gameboard.Square b15;
    private gameboard.Square b2;
    private gameboard.Square b3;
    private gameboard.Square b4;
    private gameboard.Square b5;
    private gameboard.Square b6;
    private gameboard.Square b7;
    private gameboard.Square b8;
    private gameboard.Square b9;
    // End of variables declaration//GEN-END:variables
}
